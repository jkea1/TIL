// 미로를 탈출 하는 경로의 가지수를 출력하세요.
// 격자판의 1은 벽이고, 0의 통로이다.
// 통로를 통해서만 이동 할 수 있다.
// (행, 렬)
// 여기에서는 (0,0)이 출발점, (6,6)이 도착점
// 동서남북 4방향으로 이동할 수 있다.
// D(0, 0)에서 시작 -> 4방향으로 뻗을 수 있다. D(-1, 0) D(0, 1) D(1, 0) D(0, -1)
// -> 4개의 가지(4개의 방향)를 뻗는다. -> 미로 판 밖으로 나가면 다음 방향 가지로 ,미로 판 밖으로 가지 않는 노드라면 하위노드로 내려간다.
// 오던 길은 1로 체크해야 한다!!!
// 푸는 방법을 그냥 외워버리자.

function solution(board) {
  let answer = 0
  let dx = [-1, 0, 1, 0] // 왼 오
  let dy = [0, 1, 0, -1] // 위 아래
  function DFS(x, y) {
    if (x === 6 && y === 6) {
      answer++
    } else {
      for (let k = 0; k < 4; k++) {
        let nx = x + dx[k]
        let ny = y + dy[k]
        if (nx >= 0 && nx <= 6 && ny <= 6 && board[nx][ny] === 0) {
          board[nx][ny] = 1 // 지나간 길은 체크하기
          DFS(nx, ny)
          board[nx][ny] = 0
        }
      }
    }
  }
  board[0][0] = 1
  DFS(0, 0)
  return answer
}

let arr = [
  [0, 0, 0, 0, 0, 0, 0],
  [0, 1, 1, 1, 1, 1, 0],
  [0, 0, 0, 1, 0, 0, 0],
  [1, 1, 0, 1, 0, 1, 1],
  [1, 1, 0, 0, 0, 0, 1],
  [1, 1, 0, 1, 1, 0, 0],
  [1, 0, 0, 0, 0, 0, 0],
]

console.log(solution(arr))
