{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover } from 'antd';\nimport { EllipsisOutlined, RetweetOutlined, HeartOutlined, MessageOutlined } from '@ant-design/icons';\nimport { Button } from 'antd/lib/radio';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './PostImages';\nvar ButtonGroup = Button.Group;\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user;\n    return (_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.id;\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 35\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content:\n      //내가 쓴글이면 수정, 삭제 가능하게 하고 남이 쓴글이면 신고가능하게 하기.\n      __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })));\n};\n\n//initialState 모양대로 proptypes를 정해주면 된다. \n_s(PostCard, \"FJdoDJNyUlJ5WKWdRipc5DguCUQ=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","PropTypes","useSelector","Card","Popover","EllipsisOutlined","RetweetOutlined","HeartOutlined","MessageOutlined","Button","Avatar","PostImages","ButtonGroup","Group","PostCard","post","id","state","user","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useSelector} from 'react-redux';\nimport { Card, Popover } from 'antd';\nimport { EllipsisOutlined, RetweetOutlined, HeartOutlined, MessageOutlined} from '@ant-design/icons';\nimport { Button } from 'antd/lib/radio';\nimport Avatar from 'antd/lib/avatar/avatar';\n\nimport PostImages from './PostImages';\n\nconst ButtonGroup = Button.Group; \n\nconst PostCard = ({ post }) => {\n  const id = useSelector((state) => state.user?.id);\n\n  return (\n    <div>\n      <Card \n        cover= {post.Images[0] && <PostImages images = {post.Images} />}\n        actions = {[\n          <RetweetOutlined key = \"retweet\"/>,\n          <HeartOutlined key = \"heart\"/>,\n          <MessageOutlined key = \"comment\"/>,\n          <Popover key = \"more\" content={(\n            //내가 쓴글이면 수정, 삭제 가능하게 하고 남이 쓴글이면 신고가능하게 하기.\n            <Button.Group>\n              {id && post.User.id === id  \n              ? (\n                <>\n                  <Button>수정</Button>\n                  <Button type=\"danger\">삭제</Button>\n                </>\n                ) : <Button>신고</Button> }\n            </Button.Group>\n          )}>\n            <EllipsisOutlined />\n          </Popover> \n        ]}\n        >\n          <Card.Meta\n            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n            title={post.User.nickname}\n            description={post.content}\n          />\n      </Card>\n      {/* <CommentForm /> */}\n      {/* <Comments /> */}\n    </div>\n  )\n}\n\n//initialState 모양대로 proptypes를 정해주면 된다. \nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n}\nexport default PostCard"],"mappings":"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"},"metadata":{},"sourceType":"module"}