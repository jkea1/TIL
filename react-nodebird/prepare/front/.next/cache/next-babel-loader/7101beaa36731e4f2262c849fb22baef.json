{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\n//쪼갰던 reducer 2개 불러오기\nimport user from './user';\nimport post from './post';\n\n//초기 값들을 initialState에 잡아 둬야 한다. \nvar initialState = {\n  user: {},\n  post: {}\n};\n\n//reducer\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE : ', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","combineReducers","user","post","initialState","rootReducer","index","state","action","type","console","log","payload"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/reducers/index.js"],"sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\n//쪼갰던 reducer 2개 불러오기\nimport user from './user';\nimport post from './post';\n\n//초기 값들을 initialState에 잡아 둬야 한다. \nconst initialState = {\n  user: {\n    \n  },\n  post: {\n    \n  }\n}\n\n\n//reducer\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE :  \n        console.log('HYDRATE : ', action);\n        return {...state, ...action.payload};\n      default : \n        return state;\n    }\n  },\n  user, \n  post,\n});\n  \n    \n    \n\nexport default rootReducer;\n"],"mappings":";;;AAAA,SAAQA,OAAO,QAAO,oBAAoB;AAC1C,SAASC,eAAe,QAAQ,OAAO;AACvC;AACA,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;;AAEzB;AACA,IAAMC,YAAY,GAAG;EACnBF,IAAI,EAAE,CAEN,CAAC;EACDC,IAAI,EAAE,CAEN;AACF,CAAC;;AAGD;AACA,IAAME,WAAW,GAAGJ,eAAe,CAAC;EAClCK,KAAK,EAAE,iBAAwB;IAAA,IAAvBC,KAAK,uEAAG,CAAC,CAAC;IAAA,IAAEC,MAAM;IACxB,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAKT,OAAO;QACVU,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,MAAM,CAAC;QACjC,uCAAWD,KAAK,GAAKC,MAAM,CAACI,OAAO;MACrC;QACE,OAAOL,KAAK;IAAC;EAEnB,CAAC;EACDL,IAAI,EAAJA,IAAI;EACJC,IAAI,EAAJA;AACF,CAAC,CAAC;AAKF,eAAeE,WAAW"},"metadata":{},"sourceType":"module"}