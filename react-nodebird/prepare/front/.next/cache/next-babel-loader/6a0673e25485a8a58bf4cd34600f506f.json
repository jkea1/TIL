{"ast":null,"code":"var _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover } from 'antd';\nimport { EllipsisOutlined, RetweetOutlined, HeartOutlined } from '@ant-design/icons';\nimport { Button } from 'antd/lib/radio';\nimport ButtonGroup from 'antd/lib/button/button-group';\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me === null || me === void 0 ? void 0 : me.id;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 35\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content:\n      //내가 쓴글이면 수정, 삭제 가능하게 하고 남이 쓴글이면 신고가능하게 하기.\n      __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }, \"\\uC0AD\\uC81C\"), __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(Buttons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), __jsx(CommentForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), __jsx(Comments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\n//initialState 모양대로 proptypes를 정해주면 된다. \nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","PropTypes","useSelector","Card","Popover","EllipsisOutlined","RetweetOutlined","HeartOutlined","Button","ButtonGroup","PostCard","post","me","state","user","id","Images","propTypes","shape","number","User","object","content","string","createdAt","Comments","arrayOf","isRequired"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useSelector} from 'react-redux';\nimport { Card, Popover } from 'antd';\nimport { EllipsisOutlined, RetweetOutlined, HeartOutlined} from '@ant-design/icons';\nimport { Button } from 'antd/lib/radio';\nimport ButtonGroup from 'antd/lib/button/button-group';\n\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user);\n  const id = me?.id;\n\n  return (\n    <div>\n      <Card \n        cover= {post.Images[0] && <PostImages images = {post.Images} />}\n        actions = {[\n          <RetweetOutlined key = \"retweet\"/>,\n          <HeartOutlined key = \"heart\"/>,\n          <MessageOutlined key = \"comment\"/>,\n          <Popover key = \"more\" content={(\n            //내가 쓴글이면 수정, 삭제 가능하게 하고 남이 쓴글이면 신고가능하게 하기.\n            <Button.Group>\n              <Button>수정</Button>\n              <Button type=\"danger\">삭제</Button>\n              <Button>신고</Button>\n            </Button.Group>\n          )}>\n            <EllipsisOutlined />\n          </Popover>\n        ]}\n\n        >\n        <Image />\n        <Content />\n        <Buttons></Buttons>\n      </Card>\n      <CommentForm />\n      <Comments />\n    </div>\n  )\n}\n\n//initialState 모양대로 proptypes를 정해주면 된다. \nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n}\nexport default PostCard"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAQC,WAAW,QAAO,aAAa;AACvC,SAASC,IAAI,EAAEC,OAAO,QAAQ,MAAM;AACpC,SAASC,gBAAgB,EAAEC,eAAe,EAAEC,aAAa,QAAO,mBAAmB;AACnF,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,WAAW,MAAM,8BAA8B;AAEtD,MAAMC,QAAQ,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,MAAM;IAAEC;EAAG,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACjD,MAAMC,EAAE,GAAGH,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEG,EAAE;EAEjB,OACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAI;IACH,KAAK,EAAGJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,IAAI,MAAC,UAAU;MAAC,MAAM,EAAIL,IAAI,CAACK,MAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAChE,OAAO,EAAI,CACT,MAAC,eAAe;MAAC,GAAG,EAAG,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE,EAClC,MAAC,aAAa;MAAC,GAAG,EAAG,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE,EAC9B,MAAC,eAAe;MAAC,GAAG,EAAG,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE,EAClC,MAAC,OAAO;MAAC,GAAG,EAAG,MAAM;MAAC,OAAO;MAC3B;MACA,MAAC,MAAM,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACX,MAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAAY,EACnB,MAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAAY,EACjC,MAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAAY,CAErB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACA,MAAC,gBAAgB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACZ,CACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAGF,MAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACT,MAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACX,MAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAW,CACd,EACP,MAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACf,MAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACR;AAEV,CAAC;;AAED;AACAN,QAAQ,CAACO,SAAS,GAAG;EACnBN,IAAI,EAAEV,SAAS,CAACiB,KAAK,CAAC;IACpBH,EAAE,EAAEd,SAAS,CAACkB,MAAM;IACpBC,IAAI,EAAEnB,SAAS,CAACoB,MAAM;IACtBC,OAAO,EAAErB,SAAS,CAACsB,MAAM;IACzBC,SAAS,EAAEvB,SAAS,CAACoB,MAAM;IAC3BI,QAAQ,EAAExB,SAAS,CAACyB,OAAO,CAACzB,SAAS,CAACoB,MAAM,CAAC;IAC7CL,MAAM,EAAEf,SAAS,CAACyB,OAAO,CAACzB,SAAS,CAACoB,MAAM;EAC5C,CAAC,CAAC,CAACM;AACL,CAAC;AACD,eAAejB,QAAQ"},"metadata":{},"sourceType":"module"}