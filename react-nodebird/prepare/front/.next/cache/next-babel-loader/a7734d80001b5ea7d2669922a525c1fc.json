{"ast":null,"code":"var _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/FollowButton.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch, useCallback } from 'react-redux';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\n//로그인을 했고 게시글의 주인의 id가 내가 팔로잉 한 사람의 id면 버튼에 '언팔로우', \n//로그인을 했고 팔로우한 사람이 아니면 '팔로우' 띄우기.\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id); //이게 불린 값으로 나오나..?\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, isFollowing ? 언팔로우 : 팔로우);\n};\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired //object 보다 shape로 하는게 좋다. \n};\n\nexport default FollowButton;","map":{"version":3,"names":["React","useSelector","useDispatch","useCallback","Button","PropTypes","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","me","followLoading","unfollowLoading","state","user","isFollowing","Followings","find","v","id","User","onClickButton","type","data","언팔로우","팔로우","propTypes","object","isRequired"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/FollowButton.js"],"sourcesContent":["import React from 'react';\nimport { useSelector , useDispatch, useCallback} from 'react-redux';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\n//로그인을 했고 게시글의 주인의 id가 내가 팔로잉 한 사람의 id면 버튼에 '언팔로우', \n//로그인을 했고 팔로우한 사람이 아니면 '팔로우' 띄우기.\n\nconst FollowButton = ({post}) => {\n  const dispatch = useDispatch();\n  const { me , followLoading, unfollowLoading } = useSelector((state) => state.user);\n  \n  const isFollowing = me?.Followings.find((v) => v.id === post.User.id); //이게 불린 값으로 나오나..?\n  const onClickButton = useCallback(() => {\n    if(isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id,\n      })\n    } else {\n      dispatch({\n        type : FOLLOW_REQUEST,\n        data: post.User.id,\n      })\n    }\n  }, [isFollowing]);\n  \n  return (\n    <Button loading={followLoading || unfollowLoading} onClick = {onClickButton}>\n      {isFollowing ? 언팔로우 : 팔로우}\n    </Button>\n  )\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired,//object 보다 shape로 하는게 좋다. \n};\n\nexport default FollowButton;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAGC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACnE,SAASC,MAAM,QAAQ,MAAM;AAC7B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEnE;AACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;EAACC;AAAI,CAAC,KAAK;EAC/B,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES,EAAE;IAAGC,aAAa;IAAEC;EAAgB,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAElF,MAAMC,WAAW,GAAGL,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEM,UAAU,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKX,IAAI,CAACY,IAAI,CAACD,EAAE,CAAC,CAAC,CAAC;EACvE,MAAME,aAAa,GAAGnB,WAAW,CAAC,MAAM;IACtC,IAAGa,WAAW,EAAE;MACdN,QAAQ,CAAC;QACPa,IAAI,EAAEhB,gBAAgB;QACtBiB,IAAI,EAAEf,IAAI,CAACY,IAAI,CAACD;MAClB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLV,QAAQ,CAAC;QACPa,IAAI,EAAGjB,cAAc;QACrBkB,IAAI,EAAEf,IAAI,CAACY,IAAI,CAACD;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,OACE,MAAC,MAAM;IAAC,OAAO,EAAEJ,aAAa,IAAIC,eAAgB;IAAC,OAAO,EAAIS,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzEN,WAAW,GAAGS,IAAI,GAAGC,GAAG,CAClB;AAEb,CAAC;AAEDlB,YAAY,CAACmB,SAAS,GAAG;EACvBlB,IAAI,EAAEJ,SAAS,CAACuB,MAAM,CAACC,UAAU,CAAC;AACpC,CAAC;;AAED,eAAerB,YAAY"},"metadata":{},"sourceType":"module"}