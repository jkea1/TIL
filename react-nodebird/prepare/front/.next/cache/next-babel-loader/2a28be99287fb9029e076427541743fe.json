{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/FollowButton.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\nvar FollowButton = function FollowButton(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me,\n    followLoading = _useSelector.followLoading,\n    unfollowLoading = _useSelector.unfollowLoading;\n  //로그인을 했고 게시글의 주인의 id가 내가 팔로잉 한 사람의 id면 \n  var isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === post.User.id;\n  }); //이게 불린 값으로 나오나..?\n  var onClickButton = useCallback(function () {\n    if (isFollowing) {\n      type: UNFOLLOW_REQUEST;\n    }\n  });\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClickButton: onClickButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, isFollowing ? 언팔로우 : 팔로우);\n};\n_s(FollowButton, \"iHFC0mwn1zqZm73c3JCtIdaduQ0=\", false, function () {\n  return [useSelector];\n});\n_c = FollowButton;\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired //object 보다 shape로 하는게 좋다. \n};\n\nexport default FollowButton;\nvar _c;\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"names":["React","useSelector","Button","PropTypes","UNFOLLOW_REQUEST","FollowButton","post","state","user","me","followLoading","unfollowLoading","isFollowing","Followings","find","v","id","User","onClickButton","useCallback","type","언팔로우","팔로우","propTypes","object","isRequired"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/FollowButton.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\n\n\nconst FollowButton = ({post}) => {\n  const { me , followLoading, unfollowLoading } = useSelector((state) => state.user);\n  //로그인을 했고 게시글의 주인의 id가 내가 팔로잉 한 사람의 id면 \n  const isFollowing = me?.Followings.find((v) => v.id === post.User.id); //이게 불린 값으로 나오나..?\n  const onClickButton = useCallback(() => {\n    if(isFollowing) {\n      type: UNFOLLOW_REQUEST;\n    }\n  });\n  \n  return (\n    <Button loading={followLoading || unfollowLoading} onClickButton = {onClickButton}>\n      {isFollowing ? 언팔로우 : 팔로우}\n    </Button>\n  )\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired,//object 보다 shape로 하는게 좋다. \n};\n\nexport default FollowButton;"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,MAAM;AAC7B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,gBAAgB,QAAQ,kBAAkB;AAGnD,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAAe;EAAA;EAAA,IAAVC,IAAI,QAAJA,IAAI;EACzB,mBAAgDL,WAAW,CAAC,UAACM,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAA1EC,EAAE,gBAAFA,EAAE;IAAGC,aAAa,gBAAbA,aAAa;IAAEC,eAAe,gBAAfA,eAAe;EAC3C;EACA,IAAMC,WAAW,GAAGH,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEI,UAAU,CAACC,IAAI,CAAC,UAACC,CAAC;IAAA,OAAKA,CAAC,CAACC,EAAE,KAAKV,IAAI,CAACW,IAAI,CAACD,EAAE;EAAA,EAAC,CAAC,CAAC;EACvE,IAAME,aAAa,GAAGC,WAAW,CAAC,YAAM;IACtC,IAAGP,WAAW,EAAE;MACdQ,IAAI,EAAEhB,gBAAgB;IACxB;EACF,CAAC,CAAC;EAEF,OACE,MAAC,MAAM;IAAC,OAAO,EAAEM,aAAa,IAAIC,eAAgB;IAAC,aAAa,EAAIO,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC/EN,WAAW,GAAGS,IAAI,GAAGC,GAAG,CAClB;AAEb,CAAC;AAAC,GAfIjB,YAAY;EAAA,QACgCJ,WAAW;AAAA;AAAA,KADvDI,YAAY;AAiBlBA,YAAY,CAACkB,SAAS,GAAG;EACvBjB,IAAI,EAAEH,SAAS,CAACqB,MAAM,CAACC,UAAU,CAAC;AACpC,CAAC;;AAED,eAAepB,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}