{"ast":null,"code":"var _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useInput from '../hooks/useInput';\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n\n  //로그인 안했으면 me가 없기 때문에 없는 경우를 대비해줘야 한다. \n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["React","useCallback","useState","useEffect","Button","Form","Input","PropTypes","useSelector","useDispatch","useInput","CommentForm","post","dispatch","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","ADD_COMMENT_REQUEST","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/CommentForm.js"],"sourcesContent":["import React, {useCallback, useState , useEffect} from 'react';\nimport {Button, Form, Input} from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport useInput from '../hooks/useInput';\n\n\n\nconst CommentForm = ({post}) => {\n  const dispatch = useDispatch();\n  \n  //로그인 안했으면 me가 없기 때문에 없는 경우를 대비해줘야 한다. \n  const id = useSelector((state) => state.user.me?.id);\n  const {addCommentDone} = useSelector((state) => state.post);\n\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n  useEffect(() => {\n    if(addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {content: commentText, postId: post.id, userId : id},\n    });\n  }, [commentText, id]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position : 'relative', margin: 0}}>\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n        <Button style={{ position: 'absolute', right: 0, bottom: -40}}type=\"primary\">삐약</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAC9D,SAAQC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAO,MAAM;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,QAAQ,MAAM,mBAAmB;AAIxC,MAAMC,WAAW,GAAG,CAAC;EAACC;AAAI,CAAC,KAAK;EAC9B,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;;EAE9B;EACA,MAAMK,EAAE,GAAGN,WAAW,CAAEO,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,MAAM;IAACI;EAAc,CAAC,GAAGV,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACH,IAAI,CAAC;EAE3D,MAAM,CAACO,WAAW,EAAEC,mBAAmB,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEvEP,SAAS,CAAC,MAAM;IACd,IAAGe,cAAc,EAAE;MACjBG,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EAEpB,MAAMI,eAAe,GAAGrB,WAAW,CAAC,MAAM;IACxCY,QAAQ,CAAC;MACPU,IAAI,EAAEC,mBAAmB;MACzBC,IAAI,EAAE;QAACC,OAAO,EAAEP,WAAW;QAAEQ,MAAM,EAAEf,IAAI,CAACE,EAAE;QAAEc,MAAM,EAAGd;MAAE;IAC3D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACK,WAAW,EAAEL,EAAE,CAAC,CAAC;EAErB,OACE,MAAC,IAAI;IAAC,QAAQ,EAAEQ,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAAEO,QAAQ,EAAG,UAAU;MAAEC,MAAM,EAAE;IAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpD,MAAC,KAAK,CAAC,QAAQ;IAAC,KAAK,EAAEX,WAAY;IAAC,QAAQ,EAAEC,mBAAoB;IAAC,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9E,MAAC,MAAM;IAAC,KAAK,EAAE;MAAES,QAAQ,EAAE,UAAU;MAAEE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAE,CAAE;IAAA,IAAI,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CAC9E,CACP;AAEX,CAAC;AAEDrB,WAAW,CAACsB,SAAS,GAAG;EACtBrB,IAAI,EAAEL,SAAS,CAAC2B,MAAM,CAACC;AACzB,CAAC;AAED,eAAexB,WAAW"},"metadata":{},"sourceType":"module"}