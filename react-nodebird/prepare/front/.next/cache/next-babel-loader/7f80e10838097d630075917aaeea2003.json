{"ast":null,"code":"var _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n//ButtonWrapper라는 스타일이 적용된 component를 만들어 사용할 수 있다. \n//ButtonWrapper는 div 태그가 된다. \nconst ButtonWrapper = styled.div`\n  marginTop: 10px;\n`;\nconst FormWrapper = styled(Form)`\n  padding: 10px;\n`;\n//setIsLoggedIn은 더미데이터로 AppLayout에서 넘겨 받음\nconst LoginForm = ({\n  setIsLoggedIn\n}) => {\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput('');\n\n  //로그인을 하는 순간 setIsLoggedIn(true)로 인해 \n  //isLoggedIn 이 true로 바뀌고 -> <UserProfile /> 로 바뀐다. \n  //서버가 없어도 useState 이용해서 더미데이터로 로그인을 시켜줄 수 있다. \n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    setIsLoggedIn(true);\n  }, [id, password]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    laoding: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 30\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;","map":{"version":3,"names":["React","useState","useCallback","useMemo","Form","Input","Button","Link","styled","PropTypes","ButtonWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","id","onChangeId","useInput","password","onChangePassword","onSubmitForm","console","log","propTypes","func","isRequired"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/LoginForm.js"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\n//ButtonWrapper라는 스타일이 적용된 component를 만들어 사용할 수 있다. \n//ButtonWrapper는 div 태그가 된다. \nconst ButtonWrapper = styled.div`\n  marginTop: 10px;\n`;\nconst FormWrapper = styled(Form)`\n  padding: 10px;\n`\n//setIsLoggedIn은 더미데이터로 AppLayout에서 넘겨 받음\nconst LoginForm = ({setIsLoggedIn}) => {\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  \n  //로그인을 하는 순간 setIsLoggedIn(true)로 인해 \n  //isLoggedIn 이 true로 바뀌고 -> <UserProfile /> 로 바뀐다. \n  //서버가 없어도 useState 이용해서 더미데이터로 로그인을 시켜줄 수 있다. \n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    setIsLoggedIn(true); \n  }, [id, password]);\n\n  return(\n    <FormWrapper onFinish={onSubmitForm}>\n      <div>\n        <label htmlFor = \"user-id\">아이디</label>\n        <br />\n        <Input \n          name=\"user-id\" \n          value={id} \n          onChange={onChangeId} \n          required \n        />\n      </div>\n      <div>\n        <label htmlFor=\"user-password\">비밀번호</label>\n        <br />\n        <Input \n          name=\"user-id\" \n          value={password} \n          onChange={onChangePassword} \n          required \n        />\n      </div>\n      <ButtonWrapper>\n        <Button type=\"primary\" htmlType=\"submit\" laoding={false}>로그인</Button>\n        <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\n      </ButtonWrapper>\n    </FormWrapper>\n  )\n}\n\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired,\n}\n\nexport default LoginForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC7D,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,YAAY;AAClC;AACA;AACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAI;AACjC;AACA,CAAC;AACD,MAAMC,WAAW,GAAGJ,MAAM,CAACJ,IAAI,CAAE;AACjC;AACA,CAAC;AACD;AACA,MAAMS,SAAS,GAAG,CAAC;EAACC;AAAa,CAAC,KAAK;EACrC,MAAM,CAACC,EAAE,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACC,QAAQ,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;;EAEjD;EACA;EACA;EACA,MAAMG,YAAY,GAAGlB,WAAW,CAAC,MAAM;IACrCmB,OAAO,CAACC,GAAG,CAACP,EAAE,EAAEG,QAAQ,CAAC;IACzBJ,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC,EAAE,CAACC,EAAE,EAAEG,QAAQ,CAAC,CAAC;EAElB,OACE,MAAC,WAAW;IAAC,QAAQ,EAAEE,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAO,OAAO,EAAG,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAAY,EACtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,KAAK;IACJ,IAAI,EAAC,SAAS;IACd,KAAK,EAAEL,EAAG;IACV,QAAQ,EAAEC,UAAW;IACrB,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,CACE,EACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAO,OAAO,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAa,EAC3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,KAAK;IACJ,IAAI,EAAC,SAAS;IACd,KAAK,EAAEE,QAAS;IAChB,QAAQ,EAAEC,gBAAiB;IAC3B,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,CACE,EACN,MAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACZ,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAC,OAAO,EAAE,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAAa,EACrE,MAAC,IAAI;IAAC,IAAI,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,MAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAc,CAAI,CAAO,CAC1C,CACJ;AAElB,CAAC;AAEDN,SAAS,CAACU,SAAS,GAAG;EACpBT,aAAa,EAAEL,SAAS,CAACe,IAAI,CAACC;AAChC,CAAC;AAED,eAAeZ,SAAS"},"metadata":{},"sourceType":"module"}