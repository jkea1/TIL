{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/CommentForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useInput from '../hooks/useInput';\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  //로그인 안했으면 me가 없기 때문에 없는 경우를 대비해줘야 한다. \n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    addCommentDone = _useSelector.addCommentDone;\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    commentText = _useInput2[0],\n    onChangeCommentText = _useInput2[1],\n    setCommentText = _useInput2[2];\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  //post는 props로 받고, id는 redecer에서 받고, 댓글은 컴포넌트내 state로 가져온다. \n  //이 data를 리듀서의 ADD_COMMENT_REQUEST에 올려준다. -> 이를 saga가 받는다. \n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n_s(CommentForm, \"BFER2UFzENIws9xD4wlXkzhKH5M=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","Button","Form","Input","PropTypes","useSelector","useDispatch","useInput","CommentForm","post","dispatch","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","ADD_COMMENT_REQUEST","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/CommentForm.js"],"sourcesContent":["import React, {useCallback, useState , useEffect} from 'react';\nimport {Button, Form, Input} from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport useInput from '../hooks/useInput';\n\n\n\nconst CommentForm = ({post}) => {\n  const dispatch = useDispatch();\n  \n  //로그인 안했으면 me가 없기 때문에 없는 경우를 대비해줘야 한다. \n  const id = useSelector((state) => state.user.me?.id);\n  const {addCommentDone} = useSelector((state) => state.post);\n\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n  useEffect(() => {\n    if(addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  //post는 props로 받고, id는 redecer에서 받고, 댓글은 컴포넌트내 state로 가져온다. \n  //이 data를 리듀서의 ADD_COMMENT_REQUEST에 올려준다. -> 이를 saga가 받는다. \n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {content: commentText, postId: post.id, userId : id},\n    });\n  }, [commentText, id]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position : 'relative', margin: 0}}>\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n        <Button style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 1 }}type=\"primary\">삐약</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAC9D,SAAQC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAO,MAAM;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,QAAQ,MAAM,mBAAmB;AAIxC,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAe;EAAA;EAAA,IAAVC,IAAI,QAAJA,IAAI;EACxB,IAAMC,QAAQ,GAAGJ,WAAW,EAAE;;EAE9B;EACA,IAAMK,EAAE,GAAGN,WAAW,CAAC,UAACO,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,mBAAyBN,WAAW,CAAC,UAACO,KAAK;MAAA,OAAKA,KAAK,CAACH,IAAI;IAAA,EAAC;IAApDM,cAAc,gBAAdA,cAAc;EAErB,gBAA2DR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAhES,WAAW;IAAEC,mBAAmB;IAAEC,cAAc;EAEvDlB,SAAS,CAAC,YAAM;IACd,IAAGe,cAAc,EAAE;MACjBG,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;;EAEpB;EACA;EACA,IAAMI,eAAe,GAAGrB,WAAW,CAAC,YAAM;IACxCY,QAAQ,CAAC;MACPU,IAAI,EAAEC,mBAAmB;MACzBC,IAAI,EAAE;QAACC,OAAO,EAAEP,WAAW;QAAEQ,MAAM,EAAEf,IAAI,CAACE,EAAE;QAAEc,MAAM,EAAGd;MAAE;IAC3D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACK,WAAW,EAAEL,EAAE,CAAC,CAAC;EAErB,OACE,MAAC,IAAI;IAAC,QAAQ,EAAEQ,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAAEO,QAAQ,EAAG,UAAU;MAAEC,MAAM,EAAE;IAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpD,MAAC,KAAK,CAAC,QAAQ;IAAC,KAAK,EAAEX,WAAY;IAAC,QAAQ,EAAEC,mBAAoB;IAAC,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9E,MAAC,MAAM;IAAC,KAAK,EAAE;MAAES,QAAQ,EAAE,UAAU;MAAEE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAA,IAAI,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CAC1F,CACP;AAEX,CAAC;AAAA,GAhCKtB,WAAW;EAAA,QACEF,WAAW,EAGjBD,WAAW,EACGA,WAAW,EAEuBE,QAAQ;AAAA;AAAA,KAP/DC,WAAW;AAkCjBA,WAAW,CAACuB,SAAS,GAAG;EACtBtB,IAAI,EAAEL,SAAS,CAAC4B,MAAM,CAACC;AACzB,CAAC;AAED,eAAezB,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}