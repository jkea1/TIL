{"ast":null,"code":"var _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/pages/profile.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport AppLayout from '../components/AppLayout';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/followList';\nimport FollowerList from '../components/followerList';\n\n//div로 나누지 말고 큼직큼직하게 먼저 하는게 좋다. \n\nconst Profile = () => {\n  /* //더미 데이터를 미리 만들어 놓는다. \n  const followerList = [{nickname: '제로초'}, {nickname: '바보'}, {nickname: '노드버드오피셜'}];\n  const followingList = [{nickname: '제로초'}, {nickname: '바보'}, {nickname: '노드버드오피셜'}]; */\n\n  const {\n    me\n  } = useSelector(state => state.user);\n\n  //로그인 안했을때 프로필 못가게 해야 한다.\n  //프로필 페이지에 있다가 로그아웃 할 경우에는 메인화면으로 가게함.\n  useEffect(() => {\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  //me가 없을 때 me를 로딩하는 동안 보여줄 화면을 null자리에 넣으면 된다. \n  //me가 없을 때 저 코드가 없으면 에러가 발생한다. \n  if (!me) {\n    return null;\n  }\n  ;\n\n  //useEffect과 if대신 if문 하나만 사용해도 된다. \n  /* if(!me) {\n    Router.push('/');\n    return null;\n  } */\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBrisd\")), __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(NicknameEditForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n    data: me.Followings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n    data: me.Followers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Profile;","map":{"version":3,"names":["React","useEffect","Head","useSelector","Router","AppLayout","NicknameEditForm","FollowList","FollowerList","Profile","me","state","user","id","push","Followings","Followers"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/pages/profile.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\n\nimport AppLayout from '../components/AppLayout';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/followList';\nimport FollowerList from '../components/followerList';\n\n//div로 나누지 말고 큼직큼직하게 먼저 하는게 좋다. \n\nconst Profile = () => {\n  /* //더미 데이터를 미리 만들어 놓는다. \n  const followerList = [{nickname: '제로초'}, {nickname: '바보'}, {nickname: '노드버드오피셜'}];\n  const followingList = [{nickname: '제로초'}, {nickname: '바보'}, {nickname: '노드버드오피셜'}]; */\n  \n  const {me} = useSelector((state) => state.user);\n  \n  //로그인 안했을때 프로필 못가게 해야 한다.\n  //프로필 페이지에 있다가 로그아웃 할 경우에는 메인화면으로 가게함.\n  useEffect(() => {\n    if(!(me && me.id)) {\n      Router.push('/')\n    }\n  }, [me && me.id]);\n\n  //me가 없을 때 me를 로딩하는 동안 보여줄 화면을 null자리에 넣으면 된다. \n  //me가 없을 때 저 코드가 없으면 에러가 발생한다. \n  if(!me) {\n    return null;\n  };\n\n  //useEffect과 if대신 if문 하나만 사용해도 된다. \n  /* if(!me) {\n    Router.push('/');\n    return null;\n  } */\n\n  return (\n    <>\n      <Head>\n        <title>내 프로필 | NodeBrisd</title>\n      </Head>\n      <AppLayout>\n        <NicknameEditForm />\n        <FollowList header=\"팔로잉 목록\" data={me.Followings} />\n        <FollowList header=\"팔로워 목록\" data={me.Followers} />\n      </AppLayout>\n    </>\n  )\n};\n\nexport default Profile;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,aAAa;AAEhC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,YAAY,MAAM,4BAA4B;;AAErD;;AAEA,MAAMC,OAAO,GAAG,MAAM;EACpB;AACF;AACA;;EAEE,MAAM;IAACC;EAAE,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;;EAE/C;EACA;EACAX,SAAS,CAAC,MAAM;IACd,IAAG,EAAES,EAAE,IAAIA,EAAE,CAACG,EAAE,CAAC,EAAE;MACjBT,MAAM,CAACU,IAAI,CAAC,GAAG,CAAC;IAClB;EACF,CAAC,EAAE,CAACJ,EAAE,IAAIA,EAAE,CAACG,EAAE,CAAC,CAAC;;EAEjB;EACA;EACA,IAAG,CAACH,EAAE,EAAE;IACN,OAAO,IAAI;EACb;EAAC;;EAED;EACA;AACF;AACA;AACA;;EAEE,OACE;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2CAAgC,CAC3B,EACP,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACR,MAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACpB,MAAC,UAAU;IAAC,MAAM,EAAC,iCAAQ;IAAC,IAAI,EAAEA,EAAE,CAACK,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACnD,MAAC,UAAU;IAAC,MAAM,EAAC,iCAAQ;IAAC,IAAI,EAAEL,EAAE,CAACM,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACxC,CACX;AAEP,CAAC;AAED,eAAeP,OAAO"},"metadata":{},"sourceType":"module"}