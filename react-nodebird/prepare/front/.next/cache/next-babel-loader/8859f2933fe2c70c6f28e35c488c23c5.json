{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/pages/index.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\n//<AppLayout>으로 감싸진 애들이 children이 된다. \n//의미있는 단위로 컴포넌트를 나눠주면 된다. \nvar Home = function Home() {\n  _s();\n  var dispatch = useDispatch();\n  //빈 배열만 넣는다면 componentdidmount 효과를 낼 수 있다. \n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector2.mainPosts;\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 32\n      }\n    });\n  }));\n};\n_s(Home, \"lSj3zPiDBkX9kG8p/QZ2Bmh3iP8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","AppLayout","Head","useSelector","useDispatch","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","type","state","user","me","post","mainPosts","map","id"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/pages/index.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\n\n//<AppLayout>으로 감싸진 애들이 children이 된다. \n//의미있는 단위로 컴포넌트를 나눠주면 된다. \nconst Home = () => {\n  const dispatch = useDispatch();\n  //빈 배열만 넣는다면 componentdidmount 효과를 낼 수 있다. \n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    })\n  }, []);\n\n  const {me} = useSelector((state) => state.user);\n  const {mainPosts} = useSelector((state) => state.post);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => <PostCard key={post.id} post={post}/>)}\n    </AppLayout>\n  );\n}\n\nexport default Home;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,kBAAkB,QAAQ,kBAAkB;;AAGrD;AACA;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;EAAA;EACjB,IAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B;EACAJ,SAAS,CAAC,YAAM;IACdS,QAAQ,CAAC;MACPC,IAAI,EAAEH;IACR,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,mBAAaJ,WAAW,CAAC,UAACQ,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAxCC,EAAE,gBAAFA,EAAE;EACT,oBAAoBV,WAAW,CAAC,UAACQ,KAAK;MAAA,OAAKA,KAAK,CAACG,IAAI;IAAA,EAAC;IAA/CC,SAAS,iBAATA,SAAS;EAEhB,OACE,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACPF,EAAE,IAAI,MAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAClBE,SAAS,CAACC,GAAG,CAAC,UAACF,IAAI;IAAA,OAAK,MAAC,QAAQ;MAAC,GAAG,EAAEA,IAAI,CAACG,EAAG;MAAC,IAAI,EAAEH,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE;EAAA,EAAC,CACrD;AAEhB,CAAC;AAAA,GAlBKN,IAAI;EAAA,QACSJ,WAAW,EAQfD,WAAW,EACJA,WAAW;AAAA;AAAA,KAV3BK,IAAI;AAoBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}