{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar initialState = {\n  name: 'zerocho',\n  age: '27',\n  password: 'babo'\n};\n\n//동적 action (=action creator)\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n};\nchangeNickname('boogicho');\nstore.dispatch(changeNickname('ea'));\n\n//reducer\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["initialState","name","age","password","changeNickname","data","type","store","dispatch","rootReducer","state","action"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/reducers/index.js"],"sourcesContent":["const initialState = {\n  name: 'zerocho',\n  age: '27',\n  password: 'babo'\n}\n\n//동적 action (=action creator)\nconst changeNickname = (data) => {\n  return {\n    type : 'CHANGE_NICKNAME',\n    data,\n  }\n};\nchangeNickname('boogicho');\n\nstore.dispatch(changeNickname('ea'));\n\n//reducer\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_NICKNAME' : \n      return {\n        ...state,\n        name: action.data,\n      }\n  }\n}\n\nexport default rootReducer;\n"],"mappings":";;;AAAA,IAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE,SAAS;EACfC,GAAG,EAAE,IAAI;EACTC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,IAAI,EAAK;EAC/B,OAAO;IACLC,IAAI,EAAG,iBAAiB;IACxBD,IAAI,EAAJA;EACF,CAAC;AACH,CAAC;AACDD,cAAc,CAAC,UAAU,CAAC;AAE1BG,KAAK,CAACC,QAAQ,CAACJ,cAAc,CAAC,IAAI,CAAC,CAAC;;AAEpC;AACA,IAAMK,WAAW,GAAG,SAAdA,WAAW,GAAqC;EAAA,IAAjCC,KAAK,uEAAGV,YAAY;EAAA,IAAEW,MAAM;EAC/C,QAAQA,MAAM,CAACL,IAAI;IACjB,KAAK,iBAAiB;MACpB,uCACKI,KAAK;QACRT,IAAI,EAAEU,MAAM,CAACN;MAAI;EAClB;AAEP,CAAC;AAED,eAAeI,WAAW"},"metadata":{},"sourceType":"module"}