{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Popover, Button, List, Comment } from 'antd';\nimport { EllipsisOutlined, RetweetOutlined, HeartOutlined, MessageOutlined } from '@ant-design/icons';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\n\n//index.js에서 post 받아옴\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    removePostLoading = _useSelector.removePostLoading;\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var _useState2 = useState(false),\n    commentFormOpened = _useState2[0],\n    setCommentFormOpened = _useState2[1];\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    console.log(\"remove_post_request onclick event\");\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 35\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content:\n      //내가 쓴글이면 수정, 삭제 가능하게 하고 남이 쓴글이면 신고가능하게 하기.\n      __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        loading: removePostLoading,\n        onClick: onRemovePost,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\"), \" \"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 27\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })));\n};\n\n//initialState 모양대로 proptypes를 정해주면 된다. \n_s(PostCard, \"aLLlxk2fIF+ntfCh6DU9gKHDPe8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","useCallback","PropTypes","useSelector","useDispatch","Card","Popover","Button","List","Comment","EllipsisOutlined","RetweetOutlined","HeartOutlined","MessageOutlined","Avatar","HeartTwoTone","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","state","removePostLoading","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","onRemovePost","console","log","type","data","id","user","me","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React, {useState, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { Card, Popover, Button , List, Comment} from 'antd';\nimport { EllipsisOutlined, RetweetOutlined, HeartOutlined, MessageOutlined} from '@ant-design/icons';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { HeartTwoTone } from '@ant-design/icons';\n\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\n\n//index.js에서 post 받아옴\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n\n  const {removePostLoading} = useSelector((state) => state.post);\n\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  \n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    console.log(\"remove_post_request onclick event\");\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    })\n  }, []);\n\n  const id = useSelector((state) => state.user.me?.id);\n\n  return (\n    <div>\n      <Card \n        cover= {post.Images[0] && <PostImages images = {post.Images} />}\n        actions = {[\n          <RetweetOutlined key = \"retweet\"/>,\n          liked\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n            : <HeartOutlined key = \"heart\" onClick={onToggleLike} />,\n          <MessageOutlined key = \"comment\" onClick={onToggleComment}/>,\n          <Popover key = \"more\" content={(\n            //내가 쓴글이면 수정, 삭제 가능하게 하고 남이 쓴글이면 신고가능하게 하기.\n            <Button.Group>\n              {id && post.User.id === id  \n              ? (\n                <>\n                  <Button>수정</Button>\n                  <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\n                </>\n                ) \n                : <Button>신고</Button> } {/* 왜 신고로 뜨지.. */}\n            </Button.Group>\n          )}>\n            <EllipsisOutlined />\n          </Popover> \n        ]}\n        >\n          <Card.Meta\n            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n            title={post.User.nickname}\n            description={<PostCardContent postData= {post.content} />}\n          />\n      </Card>\n      {commentFormOpened && (\n        <div>\n          <CommentForm post = {post}/>\n          <List \n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment \n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n      {/* <CommentForm /> */}\n      {/* <Comments /> */}\n    </div>\n  )\n}\n\n//initialState 모양대로 proptypes를 정해주면 된다. \nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n}\nexport default PostCard"],"mappings":"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"},"metadata":{},"sourceType":"module"}