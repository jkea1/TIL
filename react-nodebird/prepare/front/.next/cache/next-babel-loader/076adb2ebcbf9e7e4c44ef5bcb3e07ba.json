{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = require(\"react\");\nvar isServer = false;\nvar _default = /*#__PURE__*/function (_react$Component) {\n  _inherits(_default, _react$Component);\n  var _super = _createSuper(_default);\n  function _default(props) {\n    var _this;\n    _classCallCheck(this, _default);\n    _this = _super.call(this, props);\n    _this._hasHeadManager = void 0;\n    _this.emitChange = function () {\n      if (_this._hasHeadManager) {\n        _this.props.headManager.updateHead(_this.props.reduceComponentsToState(_toConsumableArray(_this.props.headManager.mountedInstances), _this.props));\n      }\n    };\n    _this._hasHeadManager = _this.props.headManager && _this.props.headManager.mountedInstances;\n    if (isServer && _this._hasHeadManager) {\n      _this.props.headManager.mountedInstances.add(_assertThisInitialized(_this));\n      _this.emitChange();\n    }\n    return _this;\n  }\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._hasHeadManager) {\n        this.props.headManager.mountedInstances.add(this);\n      }\n      this.emitChange();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.emitChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._hasHeadManager) {\n        this.props.headManager.mountedInstances[\"delete\"](this);\n      }\n      this.emitChange();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n  return _default;\n}(_react.Component);\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../next-server/lib/side-effect.tsx"],"names":["isServer","Component","_hasHeadManager","emitChange","props","headManager","updateHead","reduceComponentsToState","mountedInstances","constructor","add","componentDidMount","componentDidUpdate","componentWillUnmount","render"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAEA,IAAMA,QAAQ,QAAd;AAce,IAAA,QAAA;EAAA;EAAA;EAcbS,kBAAYL,KAAD,EAAa;IAAA;IAAA;IACtB,0BAAMA,KAAN;IADsB,MAbhBF,eAagB,GAAA,KAAA,CAAA;IAAA,MAXxBC,UAWwB,GAXX,YAAY;MACvB,IAAI,MAAKD,eAAT,EAA0B;QACxB,MAAKE,KAAL,CAAWC,WAAX,CAAuBC,UAAvB,CACE,MAAKF,KAAL,CAAWG,uBAAX,oBACM,MAAKH,KAAL,CAAWC,WAAX,CAAuBG,gBAD7B,GAEE,MAAKJ,KAFP,CADF,CAAA;MAMD;IACF,CAEuB;IAEtB,MAAKF,eAAL,GACE,MAAKE,KAAL,CAAWC,WAAX,IAA0B,MAAKD,KAAL,CAAWC,WAAX,CAAuBG,gBADnD;IAGA,IAAIR,QAAQ,IAAI,MAAKE,eAArB,EAAsC;MACpC,MAAKE,KAAL,CAAWC,WAAX,CAAuBG,gBAAvB,CAAwCE,GAAxC,+BAAA;MACA,MAAKP,UAAL,EAAA;IACD;IACF;EAAA;EACDQ;IAAAA;IAAAA,oCAAoB;MAClB,IAAI,IAAA,CAAKT,eAAT,EAA0B;QACxB,IAAA,CAAKE,KAAL,CAAWC,WAAX,CAAuBG,gBAAvB,CAAwCE,GAAxC,CAA4C,IAA5C,CAAA;MACD;MACD,IAAA,CAAKP,UAAL,EAAA;IACD;EACDS;IAAAA;IAAAA,qCAAqB;MACnB,IAAA,CAAKT,UAAL,EAAA;IACD;EACDU;IAAAA;IAAAA,uCAAuB;MACrB,IAAI,IAAA,CAAKX,eAAT,EAA0B;QACxB,IAAA,CAAKE,KAAL,CAAWC,WAAX,CAAuBG,gBAAvB,UAAA,CAA+C,IAA/C,CAAA;MACD;MACD,IAAA,CAAKL,UAAL,EAAA;IACD;EAEDW;IAAAA;IAAAA,yBAAS;MACP,OAAO,IAAP;IACD;EA1CqD;EAAA;AAAA,EAA3Bb,MAAAA,CAAAA,SAA2B","sourcesContent":["import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"script"}