{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/PostImages.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n//이미지가 하나일 경우 화면에 하나가 꽉차게 \n//여러개 일경우 아래로 내려오게 \n//일정 갯수가 넘어가면 \nvar PostImages = function PostImages(_ref) {\n  _s();\n  var images = _ref.images;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showImageZoom = _useState2[0],\n    setShowImagesZoom = _useState2[1];\n\n  //이미지를 클릭하면 캐러셀 형식으로 확대해서 보여준다. \n  var onZoom = useCallback(function () {\n    setShowImagesZoom(true);\n  }, []);\n  if (images.length === 1) {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      src: images[0].src,\n      alt: images[0].src,\n      onClick: onZoom,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }));\n  }\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"\\uAD6C\\uD604 \\uC911...\");\n};\n_s(PostImages, \"nXznhmoCPXT6Nzh2Zen0f/keBzg=\");\n_c = PostImages;\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object)\n};\nexport default PostImages;\nvar _c;\n$RefreshReg$(_c, \"PostImages\");","map":{"version":3,"names":["React","PropTypes","PostImages","images","useState","showImageZoom","setShowImagesZoom","onZoom","useCallback","length","src","propTypes","arrayOf","object"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/PostImages.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n//이미지가 하나일 경우 화면에 하나가 꽉차게 \n//여러개 일경우 아래로 내려오게 \n//일정 갯수가 넘어가면 \nconst PostImages = ({ images }) => {\n  const [showImageZoom, setShowImagesZoom] = useState(false);\n\n  //이미지를 클릭하면 캐러셀 형식으로 확대해서 보여준다. \n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n\n  if(images.length === 1) {\n    return (\n      <>\n        <img src={images[0].src} alt={images[0].src} onClick={onZoom} />\n      </>\n    )\n  }\n  return (\n    <div>구현 중...</div>\n  )\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default PostImages;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAAmB;EAAA;EAAA,IAAbC,MAAM,QAANA,MAAM;EAC1B,gBAA2CC,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAnDC,aAAa;IAAEC,iBAAiB;;EAEvC;EACA,IAAMC,MAAM,GAAGC,WAAW,CAAC,YAAM;IAC/BF,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGH,MAAM,CAACM,MAAM,KAAK,CAAC,EAAE;IACtB,OACE;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE;MAAK,GAAG,EAAEN,MAAM,CAAC,CAAC,CAAC,CAACO,GAAI;MAAC,GAAG,EAAEP,MAAM,CAAC,CAAC,CAAC,CAACO,GAAI;MAAC,OAAO,EAAEH,MAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAC/D;EAEP;EACA,OACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAAkB;AAEtB,CAAC;AAAC,GAlBIL,UAAU;AAAA,KAAVA,UAAU;AAoBhBA,UAAU,CAACS,SAAS,GAAG;EACrBR,MAAM,EAAEF,SAAS,CAACW,OAAO,CAACX,SAAS,CAACY,MAAM;AAC5C,CAAC;AAED,eAAeX,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}