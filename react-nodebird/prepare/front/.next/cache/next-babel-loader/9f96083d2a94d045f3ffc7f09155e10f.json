{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/FollowButton.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\nvar FollowButton = function FollowButton(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  //로그인을 했고 게시글의 주인의 id가 내가 팔로잉 한 사람의 id면 \n  var isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === post.User.id;\n  }); //이게 불린 값으로 나오나..?\n  var onFollow = useCallback(function () {\n    if (isFollowing) {\n      type: UNFOLLOW_REQUEST;\n    }\n  });\n  return __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, \"\\uD314\\uB85C\\uC6B0\");\n};\n_s(FollowButton, \"53yWenZlooqmeOLBNNH5jj7A33c=\", false, function () {\n  return [useSelector];\n});\n_c = FollowButton;\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired //object 보다 shape로 하는게 좋다. \n};\n\nexport default FollowButton;\nvar _c;\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"names":["React","useSelector","Button","PropTypes","UNFOLLOW_REQUEST","FollowButton","post","state","user","me","isFollowing","Followings","find","v","id","User","onFollow","useCallback","type","propTypes","object","isRequired"],"sources":["/Users/jinkyungjung/Desktop/CODING/react-nodebird/prepare/front/components/FollowButton.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\n\n\nconst FollowButton = ({post}) => {\n  const { me } = useSelector((state) => state.user);\n  //로그인을 했고 게시글의 주인의 id가 내가 팔로잉 한 사람의 id면 \n  const isFollowing = me?.Followings.find((v) => v.id === post.User.id); //이게 불린 값으로 나오나..?\n  const onFollow = useCallback(() => {\n    if(isFollowing) {\n      type: UNFOLLOW_REQUEST;\n    }\n  });\n  \n  return <Button>팔로우</Button>\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired,//object 보다 shape로 하는게 좋다. \n};\n\nexport default FollowButton;"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,MAAM;AAC7B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,gBAAgB,QAAQ,kBAAkB;AAGnD,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAAe;EAAA;EAAA,IAAVC,IAAI,QAAJA,IAAI;EACzB,mBAAeL,WAAW,CAAC,UAACM,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAzCC,EAAE,gBAAFA,EAAE;EACV;EACA,IAAMC,WAAW,GAAGD,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEE,UAAU,CAACC,IAAI,CAAC,UAACC,CAAC;IAAA,OAAKA,CAAC,CAACC,EAAE,KAAKR,IAAI,CAACS,IAAI,CAACD,EAAE;EAAA,EAAC,CAAC,CAAC;EACvE,IAAME,QAAQ,GAAGC,WAAW,CAAC,YAAM;IACjC,IAAGP,WAAW,EAAE;MACdQ,IAAI,EAAEd,gBAAgB;IACxB;EACF,CAAC,CAAC;EAEF,OAAO,MAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAAa;AAC7B,CAAC;AAAC,GAXIC,YAAY;EAAA,QACDJ,WAAW;AAAA;AAAA,KADtBI,YAAY;AAalBA,YAAY,CAACc,SAAS,GAAG;EACvBb,IAAI,EAAEH,SAAS,CAACiB,MAAM,CAACC,UAAU,CAAC;AACpC,CAAC;;AAED,eAAehB,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}