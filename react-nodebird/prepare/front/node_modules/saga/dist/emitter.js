"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TinyEmitter = /** @class */ (function () {
    function TinyEmitter() {
    }
    TinyEmitter.prototype.addListener = function (handler) {
        var _this = this;
        if (this.registry == null) {
            this.registry = handler;
        }
        else if (Array.isArray(this.registry)) {
            this.registry.push(handler);
        }
        else {
            this.registry = [this.registry, handler];
        }
        return function () { return _this.removeListener(handler); };
    };
    TinyEmitter.prototype.removeListener = function (handler) {
        if (this.registry == null) {
            return;
        }
        if (Array.isArray(this.registry)) {
            var nextArray = [];
            for (var i = 0; i < this.registry.length; i++) {
                var callback = this.registry[i];
                if (callback !== handler) {
                    nextArray.push(callback);
                }
            }
            this.registry = nextArray;
        }
        else {
            this.registry = undefined;
        }
    };
    TinyEmitter.prototype.emit = function () {
        var payload = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            payload[_i] = arguments[_i];
        }
        var _a;
        if (this.registry == null) {
            return;
        }
        if (Array.isArray(this.registry)) {
            for (var i = 0; i < this.registry.length; i++) {
                (_a = this.registry)[i].apply(_a, payload);
            }
        }
        else {
            this.registry.apply(this, payload);
        }
    };
    TinyEmitter.prototype.getCount = function () {
        if (this.registry == null) {
            return 0;
        }
        if (Array.isArray(this.registry)) {
            return this.registry.length;
        }
        else {
            return 1;
        }
    };
    return TinyEmitter;
}());
exports.TinyEmitter = TinyEmitter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1pdHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9lbWl0dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0E7SUFBQTtJQTZEQSxDQUFDO0lBMURVLGlDQUFXLEdBQWxCLFVBQW1CLE9BQWlCO1FBQXBDLGlCQVVDO1FBVEcsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksRUFBRTtZQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQztTQUMzQjthQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDckMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDL0I7YUFBTTtZQUNILElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQzVDO1FBRUQsT0FBTyxjQUFNLE9BQUEsS0FBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsRUFBNUIsQ0FBNEIsQ0FBQztJQUM5QyxDQUFDO0lBRU0sb0NBQWMsR0FBckIsVUFBc0IsT0FBaUI7UUFDbkMsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksRUFBRTtZQUN2QixPQUFPO1NBQ1Y7UUFFRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQzlCLElBQU0sU0FBUyxHQUFlLEVBQUUsQ0FBQztZQUVqQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzNDLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2xDLElBQUksUUFBUSxLQUFLLE9BQU8sRUFBRTtvQkFDdEIsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDNUI7YUFDSjtZQUVELElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDO1NBQzdCO2FBQU07WUFDSCxJQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQztTQUM3QjtJQUNMLENBQUM7SUFFTSwwQkFBSSxHQUFYO1FBQVksaUJBQWdDO2FBQWhDLFVBQWdDLEVBQWhDLHFCQUFnQyxFQUFoQyxJQUFnQztZQUFoQyw0QkFBZ0M7OztRQUN4QyxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxFQUFFO1lBQ3ZCLE9BQU87U0FDVjtRQUVELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDOUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUMzQyxDQUFBLEtBQUEsSUFBSSxDQUFDLFFBQVEsQ0FBQSxDQUFDLENBQUMsQ0FBQyxXQUFJLE9BQU8sRUFBRTthQUNoQztTQUNKO2FBQU07WUFDSCxJQUFJLENBQUMsUUFBUSxPQUFiLElBQUksRUFBYSxPQUFPLEVBQUU7U0FDN0I7SUFDTCxDQUFDO0lBRU0sOEJBQVEsR0FBZjtRQUNJLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLEVBQUU7WUFDdkIsT0FBTyxDQUFDLENBQUM7U0FDWjtRQUVELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDOUIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQztTQUMvQjthQUFNO1lBQ0gsT0FBTyxDQUFDLENBQUM7U0FDWjtJQUNMLENBQUM7SUFDTCxrQkFBQztBQUFELENBQUMsQUE3REQsSUE2REM7QUE3RFksa0NBQVciLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XHJcbmV4cG9ydCB0eXBlIENhbGxiYWNrID0gKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRpbnlFbWl0dGVyPFRIYW5kbGVyIGV4dGVuZHMgQ2FsbGJhY2s+IHtcclxuICAgIHByaXZhdGUgcmVnaXN0cnk/OiBDYWxsYmFjayB8IENhbGxiYWNrW107XHJcblxyXG4gICAgcHVibGljIGFkZExpc3RlbmVyKGhhbmRsZXI6IFRIYW5kbGVyKTogKCkgPT4gdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMucmVnaXN0cnkgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLnJlZ2lzdHJ5ID0gaGFuZGxlcjtcclxuICAgICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodGhpcy5yZWdpc3RyeSkpIHtcclxuICAgICAgICAgICAgdGhpcy5yZWdpc3RyeS5wdXNoKGhhbmRsZXIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVnaXN0cnkgPSBbdGhpcy5yZWdpc3RyeSwgaGFuZGxlcl07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gKCkgPT4gdGhpcy5yZW1vdmVMaXN0ZW5lcihoYW5kbGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVtb3ZlTGlzdGVuZXIoaGFuZGxlcjogVEhhbmRsZXIpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5yZWdpc3RyeSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMucmVnaXN0cnkpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5leHRBcnJheTogQ2FsbGJhY2tbXSA9IFtdO1xyXG5cclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJlZ2lzdHJ5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFjayA9IHRoaXMucmVnaXN0cnlbaV07XHJcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2sgIT09IGhhbmRsZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICBuZXh0QXJyYXkucHVzaChjYWxsYmFjayk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMucmVnaXN0cnkgPSBuZXh0QXJyYXk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5yZWdpc3RyeSA9IHVuZGVmaW5lZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGVtaXQoLi4ucGF5bG9hZDogUGFyYW1ldGVyczxUSGFuZGxlcj4pOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5yZWdpc3RyeSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMucmVnaXN0cnkpKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5yZWdpc3RyeS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZWdpc3RyeVtpXSguLi5wYXlsb2FkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVnaXN0cnkoLi4ucGF5bG9hZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRDb3VudCgpOiBudW1iZXIge1xyXG4gICAgICAgIGlmICh0aGlzLnJlZ2lzdHJ5ID09IG51bGwpIHtcclxuICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnJlZ2lzdHJ5KSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZWdpc3RyeS5sZW5ndGg7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==