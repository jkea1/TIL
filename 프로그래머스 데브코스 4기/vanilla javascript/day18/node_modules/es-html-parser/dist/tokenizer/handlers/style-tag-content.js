"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse = void 0;
const constants_1 = require("../../constants");
const utils_1 = require("../../utils");
const CLOSING_STYLE_TAG_PATTERN = /<\/style\s*>/i;
function parse(chars, state, tokens) {
    if (chars === "<" ||
        chars === "</" ||
        constants_1.INCOMPLETE_CLOSING_TAG_PATTERN.test(chars)) {
        state.caretPosition++;
        return;
    }
    if (CLOSING_STYLE_TAG_PATTERN.test(chars)) {
        return parseClosingStyleTag(state, tokens);
    }
    state.accumulatedContent += state.decisionBuffer;
    state.decisionBuffer = "";
    state.caretPosition++;
}
exports.parse = parse;
function parseClosingStyleTag(state, tokens) {
    if (state.accumulatedContent !== "") {
        const position = (0, utils_1.calculateTokenPosition)(state, { keepBuffer: false });
        tokens.push({
            type: constants_1.TokenTypes.StyleTagContent,
            value: state.accumulatedContent,
            range: position.range,
            loc: position.loc,
        });
    }
    const range = [
        state.caretPosition - (state.decisionBuffer.length - 1),
        state.caretPosition + 1,
    ];
    const loc = (0, utils_1.calculateTokenLocation)(state.source, range);
    tokens.push({
        type: constants_1.TokenTypes.CloseStyleTag,
        value: state.decisionBuffer,
        range,
        loc,
    });
    state.accumulatedContent = "";
    state.decisionBuffer = "";
    state.currentContext = constants_1.TokenizerContextTypes.Data;
    state.caretPosition++;
}
