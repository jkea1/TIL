"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse = void 0;
const constants_1 = require("../../constants");
const utils_1 = require("../../utils");
const COMMENT_END = "-->";
function parse(chars, state, tokens) {
    if (chars === "-" || chars === "--") {
        state.caretPosition++;
        return;
    }
    if (chars === COMMENT_END) {
        return parseCommentClose(state, tokens);
    }
    state.accumulatedContent += state.decisionBuffer;
    state.decisionBuffer = "";
    state.caretPosition++;
}
exports.parse = parse;
function parseCommentClose(state, tokens) {
    const position = (0, utils_1.calculateTokenPosition)(state, { keepBuffer: false });
    const endRange = [
        position.range[1],
        position.range[1] + COMMENT_END.length,
    ];
    const endLoc = (0, utils_1.calculateTokenLocation)(state.source, endRange);
    tokens.push({
        type: constants_1.TokenTypes.CommentContent,
        value: state.accumulatedContent,
        range: position.range,
        loc: position.loc,
    }, {
        type: constants_1.TokenTypes.CommentClose,
        value: state.decisionBuffer,
        range: endRange,
        loc: endLoc,
    });
    state.accumulatedContent = "";
    state.decisionBuffer = "";
    state.currentContext = constants_1.TokenizerContextTypes.Data;
    state.caretPosition++;
}
