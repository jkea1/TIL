"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse = void 0;
const constants_1 = require("../../constants");
const utils_1 = require("../../utils");
function parse(chars, state, tokens) {
    var _a;
    const wrapperChar = (_a = state.contextParams[constants_1.TokenizerContextTypes.DoctypeAttributeWrapped]) === null || _a === void 0 ? void 0 : _a.wrapper;
    if (chars === wrapperChar) {
        return parseWrapper(state, tokens);
    }
    state.accumulatedContent += state.decisionBuffer;
    state.decisionBuffer = "";
    state.caretPosition++;
}
exports.parse = parse;
function parseWrapper(state, tokens) {
    const position = (0, utils_1.calculateTokenPosition)(state, { keepBuffer: false });
    const endWrapperPosition = position.range[1];
    tokens.push({
        type: constants_1.TokenTypes.DoctypeAttributeValue,
        value: state.accumulatedContent,
        range: position.range,
        loc: position.loc,
    });
    const range = [endWrapperPosition, endWrapperPosition + 1];
    const loc = (0, utils_1.calculateTokenLocation)(state.source, range);
    tokens.push({
        type: constants_1.TokenTypes.DoctypeAttributeWrapperEnd,
        value: state.decisionBuffer,
        range,
        loc,
    });
    state.accumulatedContent = "";
    state.decisionBuffer = "";
    state.currentContext = constants_1.TokenizerContextTypes.DoctypeAttributes;
    state.caretPosition++;
    state.contextParams[constants_1.TokenizerContextTypes.DoctypeAttributeWrapped] =
        undefined;
}
